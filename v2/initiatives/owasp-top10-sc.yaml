config-type: initiative
# required-valint-version: "1.6.0"
id: "owasp-top10-sc"
name: "OWASP Top 10 Security Controls"
description: >
  This initiative implements a policy to verify compliance with the OWASP Top 10 Security Controls.
help: https://owasp.org/www-project-top-10-ci-cd-security-risks/
defaults:
  evidence:
    signed: false

controls:

########################################################################
# CONTROL 1: CICD-SEC-1: Insufficient Flow Control Mechanisms
########################################################################
name: "CICD-SEC-1: Insufficient Flow Control Mechanisms"
description: >
  Ensure that the CI/CD pipeline has sufficient flow control mechanisms 
  to prevent unauthorized access to the push malicious code to artifacts.
rules:
  - uses: github/repository/branch-protection@v2/rules
    name: Require Branch Protection
    description: "Implement branch protection rules to prevent unauthorized changes."

  - uses: github/repository/required-sig@v2/rules # Missing
    name: Accept Signed Commits
    description: "Ensure all commits signing is required by branch protection, in order to aintain code integrity."
        # TODO: add this rule. consider how to run multiple such rules without the complicated policy validation



########################################################################
# CONTROL 2: CICD-SEC-2: Inadequate Identity and Access Management
########################################################################
name: "CICD-SEC-2: Inadequate Identity and Access Management"
description: >
  Ensure that the CI/CD pipeline has adequate identity and access management
  to prevent unauthorized access to the pipeline and artifacts.
rules:
  - uses: github/org/2fa@v2/rules
    name: "Enforce MFA"
    description: "Mandate multi-factor authentication."

  - uses: github/org/max-admins@v2/rules
    name: "Limit Admins"
    description: "Limit the number of admins to the minimum required."
    with: 
      max_admins: 4

  - uses: github/repository/repo-private@v2/rules
    name: "Use Private Repositories"
    description: "Ensure that the repository is private."


########################################################################
# CONTROL 3: CICD-SEC-3: Dependency Chain Abuse
########################################################################
name: "CICD-SEC-3: Dependency Chain Abuse"
description: >
  Ensure that the CI/CD pipeline has mechanisms to prevent dependency chain abuse.
rules:
  # TBD: Skip for now. 
  # consider doing the dependency integrity check
  # Do we have a mock rule to provide "success, not supported" for now?
  # Consider a rule verifying through superset that we do not use any package 
  # That has binaries it it - this is supported in OpenSSF Scorecard

########################################################################
# CONTROL 4: CICD-SEC-4: Poisoned Pipeline Execution (PPE)
########################################################################
name: "CICD-SEC-4: Poisoned Pipeline Execution"
description: >
  Ensure that the pipline script cannot be tampered with

rules:
  - uses: git/coding-permissions@v2/rules
    name: "Restrict Pipeline Script Modification"
    description: "Restrict access to the pipeline script to prevent tampering."
    with: 
      files: [".github/workflow/*.yml", ".github/workflow/*.yaml"]
      ids: ["dn-scribe", "houdini91"]
  


########################################################################
# CONTROL 5: CICD-SEC-5: Insufficient PBAC (Pipeline-Based Access Controls)
########################################################################
name: "CICD-SEC-5: Insufficient Pipeline Access Controls"
description: >
  Ensure that the CI/CD pipeline has sufficient access controls to prevent unauthorized access to the pipeline and artifacts.
rules:
  - uses: github/repository/ephemeral-runners-only@v2/rules
    name: "Use Github Runner"
    description: "Ensure that only Github-provided, ephemeral runners are used for CI/CD."

  - uses: github/repository/no-org-secrets@v2/rules
    name: "Separate Repo Secrets"
    description: "Ensure that no organization secrets are used in the pipeline - secrets used are not available to other pipelines."

########################################################################
# CONTROL 6: CICD-SEC-6: Insufficient Credential Hygiene
########################################################################
name: "CICD-SEC-6: Insufficient Credential Hygiene"
description: >
  Ensure that the CI/CD pipeline has sufficient credential hygiene to prevent 
  unauthorized access to the pipeline and artifacts.

rules:
  uses: github/repository/old-secrets@v2/rules
  name: "Verify No Old Secrets Exist in Repository"
  with:
      max_secret_age: 6 # number of months

########################################################################
# CONTROL 7: CICD-SEC-7: Insecure System Configuration
########################################################################
name: "CICD-SEC-7: Insecure System Configuration"
description: >
  Ensure that the CI/CD pipeline has secure system configuration to prevent unauthorized access to the pipeline and artifacts.
rules:
  - uses: github/repository/ephemeral-runners-only@v2/rules
    name: "Use Github Runner"
    description: "Ensure that only Github-provided, ephemeral runners are used for CI/CD."


########################################################################
# CONTROL 8: CICD-SEC-8: Ungoverned Usage of 3rd Party Services
########################################################################
name: "CICD-SEC-8: Ungoverned Usage of 3rd Party Services"
description: >
  Ensure that the CI/CD pipeline has mechanisms to prevent ungoverned usage of 3rd party services.

# Not supported


########################################################################
# CONTROL 9: CICD-SEC-9: Improper Artifact Integrity Validation
########################################################################
name: "CICD-SEC-9: Improper Artifact Integrity Validation"
description: >
  Ensure that the CI/CD pipeline has mechanisms to validate the integrity of artifacts.
rules:
  - uses: sbom/artifact-signed@v2/rules
    name: "Require Images to be Signed"
    description: "Verify images are  signed."

########################################################################
# CONTROL 10: CICD-SEC-10: Insufficient Logging and Visibility
########################################################################
name: "CICD-SEC-10: Insufficient Logging and Visibility"
description: >
  Ensure that the CI/CD pipeline has sufficient logging and visibility to detect unauthorized access to the pipeline and artifacts.

rules: 
  - uses: # TBD 
    name: "Github Organization and repository evidence exist"
  # Add rules for all platforms: verify existing evidence for the repository used.